//
// Created by Dana on 15.03.2020.
//

#ifndef SCHEDULER_CALENDARGENERATOR_H
#define SCHEDULER_CALENDARGENERATOR_H

#include <set>
#include <vector>
#include <list>
#include "Timeslot.h"
#include "../Definitions.h"
#include "TimeslotRule.h"
#include "Calendar.h"
#include "../IDGenerator.h"

/**
 * The Calendar Generator holds the user-created Timeslot Rules.
 * When a calendar is requested, the Calendar Generator
 * takes a start and end date and generates the
 * Timeslots in between those.
 */
class CalendarGenerator {

public:

    /**
     * Generates time slots based on all contained time slot rules between
     * a start and end date.
     * @param startDate First day of the calendar
     * @param endDate Last day of the calendar
     * @return New calendar consisting of all timeslots generated from timeslot
     * rules between given dates
     */
    [[nodiscard]] Calendar generateCalendar(const TimeDefs::Date &startDate, const TimeDefs::Date &endDate) const;
    /**
     * Adds a new time slot rule, specifying a weekly time slot that should be
     * added to a calendar generated by an object of this class.
     * Time slot rules are stored sorted.
     * @param weekday Weekday for generated time slots (0=Sunday,..., 6=Saturday)
     * @param start_time The start time as a delimited string ("23:59:59.000")
     * @param duration The duration of the timeslot in minutes
     */
    TimeslotRule& createTimeslotRule(const Weekday &weekday, const std::string start_time, const long duration);
    /**
     * Delete a time slot Rule
     * @param timeslotRule Rule to be deleted
     */
    void deleteTimeslotRule(TimeslotRule& timeslotRule);

    /**
     * Print all rules to standard output.
     * Debugging function.
     */
    void printRules() const;

    /**
     * @return vector of pointers (for now) to all timeslot rules, in order
     */
    std::vector<TimeslotRule *> getTimeslotRules();

    static const std::map<std::string, Weekday> weekdayStrings;

    [[nodiscard]] TimeslotRule& getReference(const TimeDefs::Weekday&, const TimeDefs::TimePeriod&) const;

private:

    std::vector<TimeslotRule> timeslotRules;

    //IDGenerator idGen;
    //std::map<ID, TimeslotRule> timeslotRules;

};


#endif //SCHEDULER_CALENDARGENERATOR_H
